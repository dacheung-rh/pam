vi /opt/jboss-eap-7.4/bin/standalone.conf
#
# Specify options to pass to the Java VM.
#
if [ "x$JAVA_OPTS" = "x" ]; then
   JAVA_OPTS="-Xms2G -Xmx2G -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=1024m -Djava.net.preferIPv4Stack=true"


./bin/jboss-cli.sh --commands="embed-server --std-out=echo,/subsystem=elytron/filesystem-realm=ApplicationRealm:add-identity(identity=<USERNAME>),/subsystem=elytron/filesystem-realm=ApplicationRealm:set-password(identity=<USERNAME>, clear={password='<PASSWORD>'}),/subsystem=elytron/filesystem-realm=ApplicationRealm:add-identity-attribute(identity=<USERNAME>, name=role, value=['kie-server'])"

/opt/jboss-eap-7.4/bin/jboss-cli.sh --file=/opt/jboss-eap-7.4/docs/examples/enable-elytron.cli

./bin/jboss-cli.sh --commands="embed-server --std-out=echo,/subsystem=elytron/filesystem-realm=ApplicationRealm:add-identity(identity=bamoeadmin),/subsystem=elytron/filesystem-realm=ApplicationRealm:set-password(identity=bamoeadmin, clear={password='Redh@t123'}),/subsystem=elytron/filesystem-realm=ApplicationRealm:add-identity-attribute(identity=bamoeadmin, name=role, value=[admin,rest-all,kie-server])"

    <system-properties>
        <property name="org.kie.server.id" value="default-kie-server"/>
        <property name="org.kie.server.controller" value="http://localhost:8080/business-central/rest/controller"/>
        <property name="org.kie.server.controller.user" value="controllerUser"/>
        <property name="org.kie.server.controller.pwd" value="controllerUser1234"/>
        <property name="org.kie.server.location" value="http://localhost:8080/kie-server/services/rest/server"/>
        <property name="org.kie.server.user" value="controllerUser"/>
        <property name="org.kie.server.pwd" value="controllerUser1234"/>
    </system-properties>

    <system-properties>
        <property name="kie.maven.settings.custom" value="/opt/custom-config/settings.xml"/>
    	<property name="kie.maven.offline.force" value="true"/>
        <property name="hibernate.hbm2ddl.auto" value="none"/>
        <property name="org.kie.server.router" value="https://kierouter.cheers.local:9443"/>
        <property name="javax.net.ssl.trustStore" value="KeyStore.jks"/>
        <property name="javax.net.ssl.trustStorePassword" value="changeme"/>
        <property name="org.kie.example" value="true"/>
        <property name="org.jbpm.designer.perspective" value="full"/>
        <property name="designerdataobjects" value="false"/>
        <property name="org.kie.server.user" value="controllerUser"/>
        <property name="org.kie.server.pwd" value="${VAULT::vaulted::controller.password::1}"/>
        <property name="org.kie.server.location" value="https://pam.cheers.local:8443/kie-server/services/rest/server"/>
        <property name="org.kie.server.id" value="default-kieserver"/>
        <property name="org.drools.server.ext.disabled" value="false"/>
        <property name="org.jbpm.server.ext.disabled" value="false"/>
        <property name="org.jbpm.ui.server.ext.disabled" value="false"/>
        <property name="org.jbpm.case.server.ext.disabled" value="false"/>
        <property name="org.kie.dmn.server.ext.disabled" value="false"/>
        <property name="org.kie.swagger.server.ext.disabled" value="false"/>
        <property name="org.kie.prometheus.server.ext.disabled" value="false"/>
        <property name="org.kie.server.controller" value="https://pam.cheers.local:8443/business-central/rest/controller"/>
        <property name="org.kie.server.controller.user" value="controllerUser"/>
        <property name="org.kie.server.controller.pwd" value="${VAULT::vaulted::controller.password::1}"/>
        <property name="org.kie.server.persistence.ds" value="java:/OracleDS"/>
        <property name="org.kie.server.persistence.dialect" value="org.hibernate.dialect.Oracle10gDialect"/>
    </system-properties>

curl -X GET "http://localhost:8080/kie-server/services/rest/server" -H  "accept: application/xml" -u 'controllerUser:controllerUser1234'

curl -X GET "http://localhost:8080/business-central/rest/controller/management/servers" -H  "accept: application/xml" -u 'controllerUser:controllerUser1234'


curl -v -X POST -H 'Content-type: application/xml' -H 'X-KIE-Content-Type: xstream' -d @create-container.xml -u ${KIE_CRED} http://${KIE-SERVER-HOST}:${KIE-SERVER-PORT}/kie-server/services/rest/server/config/

curl http://localhost:9000/mgmt/list

curl -s -X POST -H 'Content-type: application/json' -H 'X-KIE-Content-Type: json' -d '{"timerDuration":"9s"}' -u kieserver:kieserver1! http://localhost:9000/containers/example:timer-test:1.1/processes/timer-test.TimerProcess/instances


java -Dorg.kie.server.router.config.file=<CONFIG_FILE> -jar rhpam-7.13.5-smart-router.jar


curl http://localhost:9000/mgmt/list

curl http://192.168.1.92:9000/mgmt/list


##################################################################################################
######## create keystore and sign with root cert
## Part 0 
## create CA (optional) if CA not exist and we wish to create your own

sudo -i
mkdir -p ~/certs
cd ~/certs
openssl genrsa -out pamca.key 2048
openssl req -new -x509 -key pamca.key -out pamca.crt -days 3650 -subj "/C=HK/ST=HongKong/L=HongKong/O=Global Security/OU=IT Department/CN=ITD"


## trust the CA
cp ./pamca.crt /etc/pki/ca-trust/source/anchors/pamca.crt

update-ca-trust extract


## Part 1 - application domain #############################################
## generate key and csr
keytool -genkey -keyalg RSA -alias pam.cheers.local -keystore pamapplication.jks -storepass password -validity 3600 -keysize 2048

keytool -certreq -alias pam.cheers.local -keystore pamapplication.jks -file pam.cheers.local.csr -storepass password

# sign with CA
openssl x509 -req -days 3650 -in pam.cheers.local.csr -CA pamca.crt -CAkey pamca.key -CAcreateserial -out pam.cheers.local.crt

keytool -import -trustcacerts -alias pamca -file pamca.crt -keystore pamapplication.jks

#keytool -import -trustcacerts -alias intermediate -file intermediate.crt -keystore pamapplication.jks

keytool -import -trustcacerts -alias pam.cheers.local -file pam.cheers.local.crt -keystore pamapplication.jks

!!!!! trust router cert to EAP
/opt/jboss-eap-7.4/standalone/configuration/pamapplication.jks

## backup default application keystore
cp /opt/jboss-eap-7.4/standalone/configuration/application.keystore /opt/jboss-eap-7.4/standalone/configuration/application.keystore_orig

## merge new application keystore to original application keystore
cd /opt/jboss-eap-7.4/standalone/configuration/
keytool -importkeystore -srckeystore pamapplication.jks -destkeystore application.keystore  -srcstorepass password -deststorepass password

keytool -v -list -keystore /opt/jboss-eap-7.4/standalone/configuration/application.keystore -alias pam.cheers.local

            <security-realm name="ApplicationRealm">
                <server-identities>
                    <ssl>
                        <keystore path="application.keystore" relative-to="jboss.server.config.dir" keystore-password="password" alias="pam.cheers.local" key-password="password" generate-self-signed-certificate-host="pam.cheers.local"/>
                    </ssl>
                </server-identities>
            </security-realm>
        </security-realms>

## Part 2 - smart router #############################################
## generate key and csr
keytool -genkey -alias kierouter.cheers.local -keyalg RSA -keystore KeyStore.jks -keysize 2048

keytool -certreq -alias kierouter.cheers.local -keystore KeyStore.jks -file kierouter.cheers.local.csr


# sign with CA
openssl x509 -req -days 3650 -in kierouter.cheers.local.csr -CA pamca.crt -CAkey pamca.key -CAcreateserial -out kierouter.cheers.local.crt

keytool -import -trustcacerts -alias pamca -file pamca.crt -keystore KeyStore.jks

#keytool -import -trustcacerts -alias intermediate -file intermediate.crt -keystore KeyStore.jks

keytool -import -trustcacerts -alias kierouter.cheers.local -file kierouter.cheers.local.crt -keystore KeyStore.jks

!!!!! trust router cert to EAP
/opt/jboss-eap-7.4/KeyStore.jk

keytool -v -list -keystore /opt/jboss-eap-7.4/KeyStore.jks

    <system-properties>
        <property name="org.kie.server.router" value="https://kierouter.cheers.local:9443"/>
        <property name="javax.net.ssl.trustStore" value="KeyStore.jks"/>
        <property name="javax.net.ssl.trustStorePassword" value="changeme"/>


# changeit
keytool -list -v -keystore $JAVA_HOME/jre/lib/security/cacerts

##################################################################################################

## smart router register controller
java -Dorg.kie.server.router.name=kierouter1 \
     -Dorg.kie.server.router.host=192.168.1.92 \
     -Dorg.kie.server.router.port=9000 \
     -Dorg.kie.server.router.tls.keystore=KeyStore.jks \
     -Dorg.kie.server.router.tls.keystore.password=changeme \
     -Dorg.kie.server.router.tls.keystore.keyalias=kierouter.cheers.local \
     -Dorg.kie.server.router.tls.port=9443 \
     -Dorg.kie.server.controller=http://192.168.1.91:8080/business-central/rest/controller \
     -Dorg.kie.server.controller.user=controllerUser \
     -Dorg.kie.server.controller.pwd="controllerUser1234" \
     -Dorg.kie.server.router.config.watcher.enabled=true \
     -jar bamoe-8.0.5-smart-router.jar

## register smart router from controller
java -Dorg.kie.server.router.name=kierouter2 \
     -Dorg.kie.server.router.host=192.168.1.91 \
     -Dorg.kie.server.router.port=9000 \
     -Dorg.kie.server.router.tls.keystore=KeyStore.jks \
     -Dorg.kie.server.router.tls.keystore.password=changeme \
     -Dorg.kie.server.router.tls.keystore.keyalias=kierouter.cheers.local \
     -Dorg.kie.server.router.tls.port=9443 \
     -jar bamoe-8.0.5-smart-router.jar


[admin@localhost ~]$ curl http://192.168.1.91:9000/mgmt/list
{
  "servers": [{"default-kieserver": ["http://localhost:8080/kie-server/services/rest/server"]}],
  "containerInfo": [{
    "releaseId": "mortgage-process:mortgage-process:1.0.0-SNAPSHOT",
    "alias": "mortgage-process",
    "containerId": "mortgage-process_1.0.0-SNAPSHOT"
  }],
  "containers": [
    {"mortgage-process_1.0.0-SNAPSHOT": ["http://localhost:8080/kie-server/services/rest/server"]},
    {"mortgage-process": ["http://localhost:8080/kie-server/services/rest/server"]}
  ]
}[

##########################################################################
mkdir -p /opt/smartrouter/

cat <<\EOF > /opt/smartrouter/start-kie-router.sh
#!/bin/bash

#JAVA_HOME=/path/to/jvmdir
WORKDIR=/opt/smartrouter
JAVA_OPTIONS=" -Xms512m -Xmx512m -server "

cd $WORKDIR
"${JAVA_HOME}/bin/java" $JAVA_OPTIONS \
     -Dorg.kie.server.router.name=kierouter1 \
     -Dorg.kie.server.router.host=192.168.1.92 \
     -Dorg.kie.server.router.port=9000 \
     -Dorg.kie.server.router.tls.keystore=KeyStore.jks \
     -Dorg.kie.server.router.tls.keystore.password=changeme \
     -Dorg.kie.server.router.tls.keystore.keyalias=kierouter.cheers.local \
     -Dorg.kie.server.router.tls.port=9443 \
     -jar bamoe-8.0.5-smart-router.jar
EOF

sudo -i
chmod +x /opt/smartrouter/start-kie-router.sh

cat <<EOF > /etc/systemd/system/smartrouter.service
[Unit]
Description=Kie Router service
After=syslog.target network.target
[Service]
SuccessExitStatus=143
User=admin
Group=admin

Type=simple

ExecStart=/opt/smartrouter/start-kie-router.sh
ExecStop=/bin/kill -15 $MAINPID
Restart=on-failure
RestartSec=30
StartLimitInterval=350
StartLimitBurst=10

[Install]
WantedBy=multi-user.target
EOF


systemctl daemon-reload
systemctl start smartrouter.service
systemctl status smartrouter.service

#############################################################################

custom maven settings
force offline maven
    <system-properties>
        <property name="kie.maven.settings.custom" value="/opt/custom-config/settings.xml"/>
        <property name="kie.maven.offline.force" value="true"/>


#############################################################################
# logger default - periodic-rotating-file-handler

# remove periodic-rotating-file-handler and add periodic-size-rotating-file-handle

/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE_HANDLER_NAME:add(file={path=FILE_PATH,relative-to=RELATIVE_TO_PATH},suffix=SUFFIX)
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE_HANDLER_NAME:write-attribute(name=level,value=LEVEL)
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE_HANDLER_NAME:write-attribute(name=rotate-on-boot, value=ROTATE_ON_BOOT)
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE_HANDLER_NAME:write-attribute(name=rotate-size, value=ROTATE_SIZE)
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE_HANDLER_NAME:write-attribute(name=max-backup-index, value=MAX_BACKUPS)
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE_HANDLER_NAME:write-attribute(name=append,value=APPEND)
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE_HANDLER_NAME:write-attribute(name=encoding,value=ENCODING)
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE_HANDLER_NAME:write-attribute(name=formatter,value=FORMAT)
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE_HANDLER_NAME:write-attribute(name=autoflush,value=AUTO_FLUSH)
/subsystem=logging/root-logger=ROOT:add-handler(name=PERIODIC_SIZE_HANDLER_NAME)

/subsystem=logging/logger=CATEGORY:add-handler(name=PERIODIC_SIZE_HANDLER_NAME)
/subsystem=logging/logger=CATEGORY:add-handler(name=PERIODIC_SIZE_HANDLER_NAME)

/subsystem=logging/root-logger=ROOT:remove-handler(name=LOG_HANDLER_NAME)
/subsystem=logging/periodic-rotating-file-handler=PERIODIC_HANDLER_NAME:remove

################################################################
/opt/jboss-eap-7.4/bin/jboss-cli.sh

connect

# add new periodic-size-rotating-file-handler
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE:add(append=true,file={relative-to="jboss.server.log.dir",path="server.log"},rotate-size=5000000 ,suffix=".yyyy-MM-dd", encoding="utf-8", autoflush=true,max-backup-index=10,append=true,rotate-on-boot=true)
/subsystem=logging/root-logger=ROOT:add-handler(name=PERIODIC_SIZE)

# remove default periodic-rotating-file-handler
/subsystem=logging/root-logger=ROOT:remove-handler(name=FILE)
/subsystem=logging/periodic-rotating-file-handler=FILE:remove

reload

# remove periodic-size-rotating-file-handler to recreate
/subsystem=logging/root-logger=ROOT:remove-handler(name=PERIODIC_SIZE)
/subsystem=logging/periodic-size-rotating-file-handler=PERIODIC_SIZE:remove
